ext {
    jacocoExcludeFiles = [
            '**/command/**',
            '**/utils/**',
            '**/CommandResolver.class',
            '**/MarsCover.class',
    ]
}

jacocoTestCoverageVerification {
    afterEvaluate {
        classDirectories.from = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: rootProject.ext.jacocoExcludeFiles)
        })
    }

    violationRules {
        rule {
            limit {
                counter = "BRANCH"
                minimum = 0.90
            }
            limit {
                counter = "METHOD"
                minimum = 0.90
            }
            limit {
                counter = "LINE"
                minimum = 0.90
            }
            limit {
                counter = "CLASS"
                minimum = 1
            }
        }
    }
}

jacocoTestReport {
    afterEvaluate {
        classDirectories.from = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: rootProject.ext.jacocoExcludeFiles)
        })
    }
    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("${buildDir}/reports/coverage")
    }
}

jacocoTestCoverageVerification.dependsOn jacocoTestReport
check.dependsOn jacocoTestCoverageVerification